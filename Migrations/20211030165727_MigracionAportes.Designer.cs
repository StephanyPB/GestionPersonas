// <auto-generated />
using System;
using GestionPersonas.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionPersonas.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20211030165727_MigracionAportes")]
    partial class MigracionAportes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("GestionPersonas.Entidades.Aportes", b =>
                {
                    b.Property<int>("AporteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Concepto")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<double>("MontoTotal")
                        .HasColumnType("REAL");

                    b.Property<int>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AporteId");

                    b.ToTable("Aportes");
                });

            modelBuilder.Entity("GestionPersonas.Entidades.AportesDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AporteId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Monto")
                        .HasColumnType("REAL");

                    b.Property<int>("TipoAporteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AporteId");

                    b.ToTable("AportesDetalle");
                });

            modelBuilder.Entity("GestionPersonas.Entidades.Grupos", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadPersonas")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.HasKey("GrupoId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("GestionPersonas.Entidades.GruposDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GrupoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Orden")
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("GruposDetalle");
                });

            modelBuilder.Entity("GestionPersonas.Entidades.Personas", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cedula")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RolId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("PersonaId");

                    b.HasIndex("RolId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("GestionPersonas.Entidades.Roles", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.HasKey("RolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GestionPersonas.Entidades.TipoAportes", b =>
                {
                    b.Property<int>("TipoAporteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<double>("MontoDeseado")
                        .HasColumnType("REAL");

                    b.Property<double>("MontoLogrado")
                        .HasColumnType("REAL");

                    b.HasKey("TipoAporteId");

                    b.ToTable("tipoAportes");

                    b.HasData(
                        new
                        {
                            TipoAporteId = 1,
                            Descripcion = "Asilo De Ancianos",
                            MontoDeseado = 3000000000.0,
                            MontoLogrado = 0.0
                        },
                        new
                        {
                            TipoAporteId = 2,
                            Descripcion = "Fundacion de Cancer ",
                            MontoDeseado = 5000000000.0,
                            MontoLogrado = 0.0
                        },
                        new
                        {
                            TipoAporteId = 3,
                            Descripcion = "Orfanato ",
                            MontoDeseado = 3000000000.0,
                            MontoLogrado = 0.0
                        },
                        new
                        {
                            TipoAporteId = 4,
                            Descripcion = "Ciencia ",
                            MontoDeseado = 2000000000.0,
                            MontoLogrado = 0.0
                        },
                        new
                        {
                            TipoAporteId = 5,
                            Descripcion = "Educacion ",
                            MontoDeseado = 1000000000.0,
                            MontoLogrado = 0.0
                        },
                        new
                        {
                            TipoAporteId = 6,
                            Descripcion = "Cementerio ",
                            MontoDeseado = 1000000000.0,
                            MontoLogrado = 0.0
                        },
                        new
                        {
                            TipoAporteId = 7,
                            Descripcion = "Zoologico",
                            MontoDeseado = 1000000000.0,
                            MontoLogrado = 0.0
                        });
                });

            modelBuilder.Entity("GestionPersonas.Entidades.AportesDetalle", b =>
                {
                    b.HasOne("GestionPersonas.Entidades.Aportes", null)
                        .WithMany("Detalle")
                        .HasForeignKey("AporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionPersonas.Entidades.GruposDetalle", b =>
                {
                    b.HasOne("GestionPersonas.Entidades.Grupos", null)
                        .WithMany("Detalle")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionPersonas.Entidades.Personas", b =>
                {
                    b.HasOne("GestionPersonas.Entidades.Roles", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("GestionPersonas.Entidades.Aportes", b =>
                {
                    b.Navigation("Detalle");
                });

            modelBuilder.Entity("GestionPersonas.Entidades.Grupos", b =>
                {
                    b.Navigation("Detalle");
                });
#pragma warning restore 612, 618
        }
    }
}
